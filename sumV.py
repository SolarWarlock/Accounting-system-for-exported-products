# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'sumV.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
import os


class Ui_Summar_V_Country(object):
    signal_find = QtCore.pyqtSignal(str)
    def setupUi(self, Summar_V_Country):
        Summar_V_Country.setObjectName("Summar_V_Country")
        Summar_V_Country.resize(500, 200)
        self.pushButton = QtWidgets.QPushButton(Summar_V_Country)
        self.pushButton.setGeometry(QtCore.QRect(170, 250, 93, 28))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(Summar_V_Country)
        self.pushButton_2.setGeometry(QtCore.QRect(280, 250, 93, 28))
        self.pushButton_2.setObjectName("pushButton_2")
        self.find_V = QtWidgets.QPushButton(Summar_V_Country)
        self.find_V.setGeometry(QtCore.QRect(270, 160, 93, 28))
        self.find_V.setObjectName("find_V")
        self.cancel_V = QtWidgets.QPushButton(Summar_V_Country)
        self.cancel_V.setGeometry(QtCore.QRect(380, 160, 93, 28))
        self.cancel_V.setObjectName("cancel_V")
        self.lineEdit_V = QtWidgets.QLineEdit(Summar_V_Country)
        self.lineEdit_V.setGeometry(QtCore.QRect(30, 70, 441, 31))
        self.lineEdit_V.setObjectName("lineEdit_V")
        self.label_V = QtWidgets.QLabel(Summar_V_Country)
        self.label_V.setGeometry(QtCore.QRect(30, 20, 351, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_V.setFont(font)
        self.label_V.setObjectName("label_V")


        self.retranslateUi(Summar_V_Country)
        QtCore.QMetaObject.connectSlotsByName(Summar_V_Country)
        self.cancel_V.clicked.connect(lambda: self.closePanel(Summar_V_Country))
        self.find_V.clicked.connect(self.findSummarV)

    def closePanel(self, Summar_V_Country):
        Summar_V_Country.hide()

    def findSummarV(self):
        country = self.lineEdit_V.text().strip()
        try:
            if not os.path.exists("data.txt"):
                raise FileNotFoundError("Файл data.txt отсутствует.")

            total_quantity = 0

            with open("data.txt", "r", encoding="utf-8") as file:
                for line in file:
                    data = line.strip().split(";")


                    if len(data) == 5:
                        item_country = data[2].strip()
                        try:
                            quantity = int(data[3])
                        except ValueError:
                            print(f"Ошибка преобразования количества: {data[3]}")
                            continue

                        if item_country.lower() == country.lower():
                            total_quantity += quantity

            message = QMessageBox()
            if total_quantity == 0:
                message.setWindowTitle("Пусто")
                message.setText("Товары не найдены")
                message.setIcon(QMessageBox.Warning)
            else:
                message.setWindowTitle("Суммарное количество")
                message.setText(f"Общее количество товаров из {country}: {total_quantity}")
                message.setIcon(QMessageBox.Information)

            message.setStandardButtons(QMessageBox.Ok)
            message.exec_()

        except FileNotFoundError:
            error = QMessageBox()
            error.setWindowTitle("Ошибка")
            error.setText("Файл не найден")
            error.setIcon(QMessageBox.Warning)
            error.setStandardButtons(QMessageBox.Ok)
            error.exec_()

        except Exception as e:
            error = QMessageBox()
            error.setWindowTitle("Упс")
            error.setText(f"Ошибка: {str(e)}")
            error.setIcon(QMessageBox.Warning)
            error.setStandardButtons(QMessageBox.Ok)
            error.exec_()



    def retranslateUi(self, Summar_V_Country):
        _translate = QtCore.QCoreApplication.translate
        Summar_V_Country.setWindowTitle(_translate("Summar_V_Country", "Суммарный объём товаров по стране"))
        self.pushButton.setText(_translate("Summar_V_Country", "PushButton"))
        self.pushButton_2.setText(_translate("Summar_V_Country", "PushButton"))
        self.find_V.setText(_translate("Summar_V_Country", "Найти"))
        self.cancel_V.setText(_translate("Summar_V_Country", "Отмена"))
        self.label_V.setText(_translate("Summar_V_Country", "Введите название страны-импортёра"))
